services:
  bookings.api:
    image: bookings
    container_name: bookings.api
    build:
      context: .
      dockerfile: Bookings.API/Dockerfile
    environment:
      - RabbitMQ__Host=amqp://bookings-queue:5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "3500:8080"
      - "3501:8081"
    depends_on:
      - postgres.db
      - bookings.queue
                
  reservations.api:
    image: reservations
    container_name: reservations.api
    build:
      context: .
      dockerfile: Reservations.API/Dockerfile
    ports:
      - "3510:8080"
      - "3511:8081"
    depends_on:
      - postgres.db
      - bookings.queue
        
  notifications.api:
    image: notifications
    container_name: notifications.api
    build:
      context: .
      dockerfile: Notifications.API/Dockerfile
    environment:
      - RabbitMQ__Host=amqp://bookings-queue:5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "3520:8080"
      - "3521:8081"
    depends_on:
      bookings.queue:
        condition: service_healthy
  
  bookings.queue:
    image: rabbitmq:management-alpine
    container_name: bookings.queue
    hostname: bookings-queue
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
  
  postgres.db:
    image: "postgres:latest"
    container_name: postgres.database
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/postgres-db:/var/lib/postgresql/data
    ports:
      - "5432:5423"
      
